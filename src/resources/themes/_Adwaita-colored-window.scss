$backdrop_transition: 200ms ease-out;

$base_color: lighten($window_color, 5%);
$bg_color: lighten($window_color, 5%);
$fg_color: hsl(hue($base_color), saturation($base_color), lightness($fg_color));
$borders_color: if($variant == 'light', darken($bg_color, 18%), darken($bg_color, 10%));
$alt_borders_color: if($variant == 'light', darken($bg_color, 24%), darken($bg_color, 18%));
$borders_edge: if($variant == 'light', transparentize(white, 0.2), transparentize($fg_color, 0.93));
$top_hilight: $borders_edge;
$dark_fill: mix($borders_color, $bg_color, 50%);

$insensitive_fg_color: mix($fg_color, $bg_color, 50%);
$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_borders_color: $borders_color;

$backdrop_base_color: if($variant == 'light', darken($base_color, 1%), lighten($base_color, 1%));
$backdrop_bg_color: $bg_color;
$backdrop_fg_color: mix($fg_color, $backdrop_bg_color, 50%);
$backdrop_borders_color: mix($borders_color, $bg_color, 80%);
$backdrop_dark_fill: mix($backdrop_borders_color, $backdrop_bg_color, 35%);
$backdrop_insensitive_color: if($variant == 'light', darken($backdrop_bg_color, 15%), lighten($backdrop_bg_color, 15%));

@if $high_contrast {
  $fg_color: if($variant == 'light', darken($fg_color, 3%), lighten($fg_color, 2%));
  $bg_color: if($variant == 'light', lighten($bg_color, 3%), darken($bg_color, 2%));
  $borders_color: if($variant == 'light', darken($borders_color, 30%), lighten($borders_color, 30%));
  $alt_borders_color: if($variant == 'light', darken($alt_borders_color, 33%), lighten($alt_borders_color, 28%));

  //insensitive state derived colors
  $insensitive_fg_color: mix($fg_color, $bg_color, 50%);
  $insensitive_bg_color: mix($bg_color, $base_color, 60%);
  $insensitive_borders_color: mix($borders_color, $bg_color, 80%);
}

@import 'drawing';

headerbar {
  @include headerbar_fill(darken($bg_color, 10%));

  border-color: $alt_borders_color;

  > clamp {
    color: $fg_color;
  }

  &:backdrop {
    background-image: image($bg_color);
    border-color: $backdrop_borders_color;
    box-shadow: inset 0 1px $top_hilight;

    > clamp {
      color: $backdrop_fg_color;
    }
  }
}

actionbar {
  background: $bg_color;

  > revealer > box {
    border-color: $borders_color;
  }

  &:backdrop {
    background: $backdrop_bg_color;

    > revealer > box {
      border-color: $backdrop_borders_color;
    }
  }
}

headerbar, actionbar {
  > * {
    color: $fg_color;

    &:backdrop { color: $backdrop_fg_color }
  }

  button {
    @include button(normal);

    &.flat, &.titlebutton { @include button(undecorated); }

    &.titlebutton { @include _button_text_shadow($fg_color); }

    &:hover { @include button(hover); }

    &:active, &:checked { @include button(active); }

    &:disabled { @include button(insensitive); }

    &:backdrop {
      @include button(backdrop);

      &:active { @include button(backdrop-active); }

      &:disabled { @include button(backdrop-insensitive); }
    }

    &:checked {
      background: if($variant == 'light', image(darken($bg_color, 17%)), image(darken($bg_color, 9%)));
      border-color: darken($borders_color, 3%);
      border-top-color: darken($borders_color, 8%);
      &:backdrop {
        @include button(backdrop-active);
      }
    }

    &.flat:backdrop, &.titlebutton:backdrop { @include button(undecorated); }
  }

  entry {
    border-color: $borders_color;

    &:focus {
      border-color: entry_focus_border($selected_bg_color);
      box-shadow: entry_focus_shadow($selected_bg_color);
    }

    &:backdrop {
      box-shadow: none;
      border-color: $backdrop_borders_color;
    }
  }
}

/* FIXME this should be inlined after we finalize the colors */

$tab_selected_bg:           darken($bg_color, 6%);
$tab_selected_bg_backdrop:  $backdrop_bg_color;

@if $variant == 'dark' {
  $tab_selected_bg:         $bg_color;
}

$tab_bg:                    darken($tab_selected_bg, 6%);
$tab_bg_backdrop:           darken($tab_selected_bg_backdrop, 6%);

$tab_bar_bg:                darken($tab_selected_bg, 9%);
$tab_bar_bg_backdrop:       darken($tab_selected_bg_backdrop, 9%);

$tab_hover_bg:              lighten($tab_bg, 3%);
$tab_selected_hover_bg:     lighten($tab_selected_bg, 3%);

$tab_needs_attention_color: $selected_bg_color;

@mixin undershoot-gradient($dir) {
  $color: black;

  @if $variant == 'dark' {
    background: linear-gradient(to #{$dir},
                                transparentize($color, .6),
                                transparentize($color, 1) 20px);
  }
  @else {
    background: linear-gradient(to #{$dir},
                                transparentize($color, .93),
                                transparentize($color, 1) 20px);
  }
}

@mixin need-attention-gradient($dir) {
  background: linear-gradient(to #{$dir},
                              transparentize($tab_needs_attention_color, .3),
                              transparentize($tab_needs_attention_color, .5) 1px,
                              transparentize($tab_needs_attention_color, 1) 20px);
}

@mixin tab-background($color) {
  background-color: $color;

  .tab-close-button-scrim {
    &.left {
      background: linear-gradient(to left, transparentize($color, 1), $color 18px);
    }

    &.right {
      background: linear-gradient(to right, transparentize($color, 1), $color 18px);
    }
  }
}

tabbar {
  .box {
    background: $tab_bar_bg;
    border-bottom: 1px solid $alt_borders_color;

    &:backdrop {
      background-color: $tab_bar_bg_backdrop;
      border-color: $backdrop_borders_color;
    }
  }

  tabbox.pinned {
    &:dir(ltr) {
      padding-right: 1px;
      box-shadow: inset -1px 0 $alt_borders_color;

      &:backdrop {
        box-shadow: inset -1px 0 $backdrop_borders_color;
      }
    }

    &:dir(rtl) {
      padding-left: 1px;
      box-shadow: inset 1px 0 $alt_borders_color;

      &:backdrop {
        box-shadow: inset 1px 0 $backdrop_borders_color;
      }
    }
  }

  undershoot {
    &.left {
      @include undershoot-gradient("right");
    }

    &.right {
      @include undershoot-gradient("left");
    }
  }

  &.needs-attention-left undershoot.left {
    @include need-attention-gradient("right");
  }

  &.needs-attention-right undershoot.right {
    @include need-attention-gradient("left");
  }

  tab {
    border-color: $alt_borders_color;
    @include tab-background($tab_bg);

    &:checked {
      @include tab-background($tab_selected_bg);

      &:hover {
        @include tab-background($tab_selected_hover_bg);
      }
    }

    &:hover {
      @include tab-background($tab_hover_bg);
    }

    &:backdrop {
      border-color: $backdrop_borders_color;
      @include tab-background($tab_bg_backdrop);

      &:checked {
        @include tab-background($tab_selected_bg_backdrop);
      }
    }
  }

  .start-action,
  .end-action {
    background: $tab_bg;
    border-color: $alt_borders_color;

    &:backdrop {
      border-color: $backdrop_borders_color;
      background-color: $tab_bg_backdrop;
    }
  }
}

tabbar {
  tab {
    &.needs-attention {
      background-image:
        radial-gradient(ellipse at bottom,
                        transparentize(white, .2),
                        transparentize($tab_needs_attention_color, .8) 15%,
                        transparentize($tab_needs_attention_color, 1) 15%);
    }

    .tab-close-button,
    .tab-secondary-icon {
      background: none;
    }

    .tab-close-button,
    .tab-secondary-icon.clickable {
      &:hover {
        background: gtkalpha($fg_color, .15);
      }

      &:active {
        background: gtkalpha(black, .2);
      }
    }
  }

  .tab-close-button-scrim {
    &.inverted {
      background: none;
    }
  }
}
